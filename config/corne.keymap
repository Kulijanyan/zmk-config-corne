/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        tumx: tumx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B)>;
            label = "TUMX";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |   I   |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |   K   |  L  |  :  |  '   |
            // |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |   ,   |  .  |  /  |      |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | PrtSc |

            bindings = <
&kp ESCAPE  &kp Q  &kp W            &kp E                &kp R              &kp T        &kp Y    &kp U              &kp I                &kp O            &kp P     &kp BSPC
&kp TAB     &kp A  &bhm LEFT_ALT S  &bhm LEFT_CONTROL D  &bhm LEFT_SHIFT F  &kp G        &kp H    &bhm LEFT_SHIFT J  &bhm LEFT_CONTROL K  &bhm LEFT_ALT L  &kp SEMI  &kp SQT
&tumx       &kp Z  &kp X            &kp C                &kp V              &kp B        &kp N    &kp M              &kp COMMA            &kp DOT          &kp FSLH  &trans
                                    &kp LGUI             &mo 1              &kp SPACE    &kp RET  &mo 2              &kp PRINTSCREEN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  BTCLR |  BT_NXT  |  7  |  8  |  9  | F1  |   |  F4 |   F5 |  F6 |  F7 |   F8  | BSPC |
            // |   TAB  |  BT_PRV  |  4  |  5  |  6  | F2  |   | LFT |  DWN |  UP | RGT | PG_UP |      |
            // |  SHFT  |          |  1  |  2  |  3  | F3  |   |  F9 |  F10 | F11 | F12 | PG_DN |      |
            //                           | GUI |     | SPC |   | ENT | HOME | END |

            bindings = <
&bt BT_CLR  &bt BT_NXT  &kp N7  &kp N8    &kp N9  &kp F1       &kp F4    &kp F5    &kp F6   &kp F7     &kp F8         &kp BSPC
&kp TAB     &kp N0      &kp N4  &kp N5    &kp N6  &kp F2       &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &kp PAGE_UP    &trans
&kp LSHFT   &bt BT_PRV  &kp N1  &kp N2    &kp N3  &kp F3       &kp F9    &kp F10   &kp F11  &kp F12    &kp PAGE_DOWN  &trans
                                &kp LGUI  &trans  &kp SPACE    &kp RET   &kp HOME  &kp END
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  `  |     |  *  | BSPC |
            // | CTRL |     |  (  |  [  |  {  |  =  |   |  _  |  }  |  ]  |  )  |  \  |      |
            // | SHFT |     |     |     |     |     |   |  -  |  +  |     |     | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT    &kp HASH          &kp DLLR        &kp PRCNT    &kp CARET  &kp AMPS         &kp GRAVE          &kp TILDE              &kp ASTRK  &kp BSPC
&kp LCTRL  &trans    &kp LPAR  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp EQUAL    &kp UNDER  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp BSLH   &trans
&kp LSHFT  &trans    &trans    &trans            &trans          &trans       &kp MINUS  &kp PLUS         &trans             &trans                 &kp PIPE   &trans
                               &kp LGUI          &trans          &kp SPACE    &kp RET    &trans           &trans
            >;
        };
    };
};
